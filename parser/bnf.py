bnf = {'<Function>': {1: ['<Type>', 'identifier', '(', '<ArgList>', ')', '<CompoundStmt>']},
       '<ArgList>': {2: ['<Arg>', '<ArgList->']},
       '<ArgList~>': {3: [',', '<Arg>', '<ArgList~>'],
                      4: ['ε']},
       '<Arg>': {5: ['<Type>', 'identifier']},
       '<Declaration>': {6: ['<Type>', '<IdentList>']},
       '<Type>': {7: ['int'], 
                  8: ['float']},
       '<IdentList>': {9: ['identifier', '<IdentList~>']},
       '<IdentList~>': {10: [',', '<IdentList>'],
                        11: ['ε']},
       '<Stmt>': {12: ['<ForStmt>'], 
                  13: ['<WhileStmt>'], 
                  14: ['<Expr>', ';'], 
                  15: ['<IfStmt>'], 
                  16:['<CompoundStmt>'], 
                  17: ['<Declaration>'], 
                  18: [';']},
       '<ForStmt>': {19: ['for', '(', '<Expr>', ';', '<OptExpr>', ';', '<OptExpr>', ')', '<Stmt>']},
       '<OptExpr>': {20: ['<Expr>'], 
                     21: ['ε']},
       '<WhileStmt>': {22: ['while', '(', '<Expr>', ')', '<Stmt>']},
       '<IfStmt>': {23: ['if', '<Expr>', '<Stmt>', '<ElsePart>']},
       '<ElsePart>': {24: ['else', '<Stmt>'], 
                      25: ['ε']},
       '<CompoundStmt>': {26: ['{', '<StmtList>', '}']},
       '<StmtList>': {27: ['<Stmt>', '<StmtList>'], 
                      28: ['ε']},
       '<Expr>': {29: ['identifier', '=', '<Expr>'], 
                  30: ['<Rvalue>']},
       '<Rvalue> ': {31: ['<Mag>', '<Rvalue~>']},
       '<Rvalue~>': {32: ['<Compare>', '<Mag>', '<Rvalue~>'], 
                     33: ['ε']},
       '<Compare>': {34: ['=='], 
                          35: ['<'], 
                          36: ['>'], 
                          37: ['<='], 
                          38: ['>='], 
                          39: ['!=']},
       '<Mag>': {40: ['<Term>', '<Mag~>']},
       '<Mag~>': {41: ['+', '<Term>', '<Mag~>'], 
                  42: ['-', '<Term>', '<Mag~>'], 
                  43: 'ε'},
       '<Term>': {44: ['<Factor>', '<Term~>']},
       '<Term~>': {45: ['*', '<Factor>', '<Term~>'], 
                   46: ['/', '<Factor>', '<Term~>'], 
                   47: ['ε']},
       '<Factor>': {48: ['(', '<Expr>', ')'], 
                    49: ['-', '<Factor>'], 
                    50: ['+', '<Factor>'], 
                    51: ['identifier'], 
                    52: ['number']}
       }